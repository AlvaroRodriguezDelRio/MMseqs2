# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'
  
strategy:
  matrix:
    avx2:
      SIMD: 'AVX2'
      FILENAME: 'mmseqs-static_avx2.tar.gz'
      STATIC: 1
      MPI: 0
    sse:
      SIMD: 'SSE4.1'
      FILENAME: 'mmseqs-static_sse41.tar.gz'
      STATIC: 1
      MPI: 0
    avx2_mpi:
      SIMD: 'AVX2' 
      STATIC: 0
      FILENAME: '' 
      MPI: 1

steps:
- script: |
    sudo apt-get update
    sudo apt-get -y install pandoc mpi-default-dev mpi-default-bin texlive-full
  displayName: 'Install dependencies'

- script: |
    mkdir build
    cd build
    STATIC_FLAGS=""
    if [ "${STATIC}" -eq "1" ]; then
      STATIC_FLAGS='-DBUILD_SHARED_LIBS=OFF -DCMAKE_EXE_LINKER_FLAGS="-static -static-libgcc -static-libstdc++" -DCMAKE_FIND_LIBRARY_SUFFIXES=".a"'
    fi
    cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo ${STATIC_FLAGS} \
          -DENABLE_WERROR=1 -DHAVE_${SIMD}=1 -DHAVE_MPI=${MPI} ..
    make -j $(nproc --all)
  displayName: 'Run build'

- script: |
    mkdir ~/regression && cd ~/regression
    git clone https://bitbucket.org/martin_steinegger/mmseqs-benchmark.git
    export TTY=0
    export MMSEQS_NUM_THREADS=8
    export PATH="$(pwd)/mmseqs-benchmark/:$PATH"
    ./mmseqs-benchmark/run_regression.sh "${BUILD_SOURCESDIRECTORY}/build/src/mmseqs" ~/regression/results/
  displayName: 'Run regression test'

- task: DownloadSecureFile@1
  inputs:
    secureFile: secretKeyPleaseDontSteal
  displayName: 'Get the deploy key'  

- script: |
    [ ! -z "${FILENAME}" ] || exit 0
    mkdir ~/.ssh && mv $DOWNLOADSECUREFILE_SECUREFILEPATH ~/.ssh/id_rsa
    chmod 700 ~/.ssh && chmod 600 ~/.ssh/id_rsa
    ssh-keyscan -t rsa uniclust.mmseqs.com >> ~/.ssh/known_hosts
    ssh codeship@uniclust.mmseqs.com "mkdir -p \"/home/mirdita/repositories/mmseqs-webserver/archive/${BUILD_SOURCEVERSION}\""
    mkdir -p ~/mmseqs2.wiki
    cd ~/mmseqs2.wiki
    git clone https://github.com/soedinglab/MMseqs2.wiki.git .
    .pandoc/make-pdf.sh
    scp userguide.pdf codeship@uniclust.mmseqs.com:"/home/mirdita/repositories/mmseqs-webserver/archive/${BUILD_SOURCEVERSION}"
    cd ${BUILD_SOURCESDIRECTORY}/build
    CURR_BUILD="mmseqs2"
    mkdir -p ${CURR_BUILD}/bin
    mkdir -p ${CURR_BUILD}/util
    mkdir -p ${CURR_BUILD}
    cp src/mmseqs ${CURR_BUILD}/bin
    chmod +x ${CURR_BUILD}/bin/mmseqs
    cp ../util/bash-completion.sh ${CURR_BUILD}/util
    chmod +x ${CURR_BUILD}/util/bash-completion.sh
    cp -r ../LICENCE.md ../README.md ~/mmseqs2.wiki/userguide.pdf ../examples ${CURR_BUILD}
    chmod -R g-w,o-w ${CURR_BUILD}
    tar czvf ${FILENAME} ${CURR_BUILD}
    scp ${FILENAME} codeship@uniclust.mmseqs.com:"/home/mirdita/repositories/mmseqs-webserver/archive/${BUILD_SOURCEVERSION}"
    ssh codeship@uniclust.mmseqs.com "update-latest-mmseqs.sh \"${BUILD_SOURCEVERSION}\""
  displayName: 'Upload build'  
